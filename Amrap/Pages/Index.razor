@page "/"
@using Amrap.Core;
@using Amrap.Core.Domain;
@using Amrap.Core.Infrastructure;
@using Bit.BlazorUI

@inject DatabaseHandler _databaseHandler
@inject WorkoutPlanReader _workoutPlanReader;

<PageTitle>Amrap App</PageTitle>
<style>
    .exerciseImg {
        max-width: 100px;
        height: auto
    }
</style>

@if (orderedWorkoutPlanItems == null)
{
    <h1>Loading...</h1>
}
else if (orderedWorkoutPlanItems != null)
{
    <h1>Workout plan (@orderedWorkoutPlanItems.Count())</h1>

    <BitBasicList Items="items"
                  EnableVirtualization="false"
                  Style="border: 1px #a19f9d solid; border-radius: 3px;">
        <RowTemplate Context="item">
            <div @key="item.Guid" style="border-bottom: 1px #8a8886 solid; padding: 5px 20px; margin: 10px;">
                <img class="exerciseImg" src="@(item.PlannedExercise.ExerciseType.Img)" >
                <div style="margin-left:3%; display: inline-block;">
                    <WorkoutPlanItemComponent Item="@item" />
                </div>
            </div>
        </RowTemplate>
    </BitBasicList>
}

@code {
    private IOrderedEnumerable<WorkoutPlanItem> orderedWorkoutPlanItems;
    private IList<WorkoutPlanItem> items => orderedWorkoutPlanItems.ToList();

    protected override async Task OnInitializedAsync()
    {
        if (!_databaseHandler.HasInitialized)
        {
            await _databaseHandler.CreateConnectionAndTables();

            await DbSeed.SeedDataIfNeeded(_databaseHandler);
        }

        this.orderedWorkoutPlanItems = await _workoutPlanReader.GetWorkoutPlan();
    }
}