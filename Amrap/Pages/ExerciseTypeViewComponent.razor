@using Amrap.Core.Domain;
@using Bit.BlazorUI

@inject NavigationManager _navigationManager;

<style>
    .exerciseKind {
        background-color: lightgrey;
        color: red;
        font-weight: 900;
        justify-content: center;
        align-content: center;
    }

    .exerciseNameInput {
        background-color: lightgrey;
        font-weight: 900;
    }

    .imgExerciseType {
        width: 100%;
        height: 100%;
        object-fit: contain;
        position: absolute;
        top: 0;
        left: 0;
        align-self: center
    }
</style>

@if (ChildContent != default)
{
    <div class="container text-center">
        <div class="row">
            <div class="col-9">
                <BitTextField InputClass="exerciseNameInput" IsReadonly="true" IsUnderlined="true" Value="@ExerciseType.Name" />
            </div>
            <div class="col-3">
                @ChildContent
            </div>
        </div>
    </div>
} else
{
    <div class="container text-center">
        <div class="row">
            <div class="col">
                <BitTextField InputClass="exerciseNameInput" IsReadonly="true" IsUnderlined="true" Value="@ExerciseType.Name" />
            </div>
        </div>
    </div>
}

<div class="container text-center">
    <div class="row">
        <div class="col-4">
            <div class="row">
                <BitTextField InputClass="exerciseKind" IsReadonly="true" IsUnderlined="false" Value="@ExerciseType.ExerciseKind.ToString()" />
            </div>
            <div class="row">
                <BitActionButton IconName="BitIconName.Chart" OnClick="GoToStats">Stats</BitActionButton>
            </div>
        </div>
        <div class="col-8">
            <div style="width:100%; padding-top:50%;position:relative;" class="border border-dark">
                <img src="@ImgUrl" class="imgExerciseType">
            </div>
        </div>
    </div>
</div>
@if (!string.IsNullOrWhiteSpace(ExerciseType.Description))
{
    <BitTextField Label="Description" IsMultiline="true" IsReadonly="true" IsUnderlined="true" Value="@ExerciseType.Description" />
}

@code {
    [Parameter]
    public ExerciseType ExerciseType { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    private string ImgUrl => 
        !string.IsNullOrWhiteSpace(ExerciseType.Img) ?
            ExerciseType.Img :
            "https://amrapteststo001.blob.core.windows.net/exercise-images/placeholder.png";

    private void GoToStats()
    {
        _navigationManager.NavigateTo($"/charts/{ExerciseType.Guid}");
    }
}
