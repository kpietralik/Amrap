@page "/exercisetypes"

@using Amrap.Core.Domain;
@using Amrap.Core;
@using Amrap.Core.Infrastructure;
@using Bit.BlazorUI

@inject NavigationManager _navigationManager;
@inject DatabaseHandler _databaseHandler;

<PageTitle>@title</PageTitle>

@if (ExerciseTypes != null)
{
    <div class="container text-center">
        <div class="row">
            <div class="col-8">
                <BitTextField IsUnderlined="false" HasBorder="false" IsReadonly="true" Value="@listText" />
            </div>
            <div class="col-4">
                <BitActionButton IconName="BitIconName.CirclePlus" OnClick="NewExerciseType">New</BitActionButton>
            </div>
        </div>
    </div>
    <BitBasicList Items="ExerciseTypes" EnableVirtualization="true" Style="border: 1px #a19f9d solid; border-radius: 3px; height: 100%">
        <RowTemplate Context="exerciseType">                      
            <div @key="exerciseType.Guid" style="border-bottom: 1px #8a8886 solid; padding: 5px 20px; margin: 10px;">
                <div style="margin-left:3%; display: inline-block;">
                    <ExerciseTypeViewComponent ExerciseType="exerciseType" />
                    <BitActionButton IconName="BitIconName.Edit" OnClick="() => EditExerciseType(exerciseType)">Edit</BitActionButton>
                </div>
            </div>
        </RowTemplate>
    </BitBasicList>
}

@code {
    private const string title = "Exercise Types";

    private IList<ExerciseType> ExerciseTypes;

    private string listText => $"Exercise Types ({ExerciseTypes.Count()})";

    protected override async Task OnInitializedAsync() => ExerciseTypes = await ExerciseType.GetExerciseTypes(_databaseHandler);

    private void NewExerciseType() => _navigationManager.NavigateTo("/newexercisetype");

    private void EditExerciseType(ExerciseType exerciseType) => _navigationManager.NavigateTo(exerciseType.EditUrl);
}
