@using Amrap.Core;
@using Amrap.Core.Domain;
@using Amrap.Core.Infrastructure;
@using Bit.BlazorUI

@inject DatabaseHandler _databaseHandler;

<ExerciseTypeViewComponent ExerciseType="@Item.ExerciseType" />

<BitTextField Label="Date" LabelClass="day-label" InputClass="day-value" IsUnderlined="true" IsReadonly="true" Value="@Item.Time.ToString("r")" />
<BitTextField Label="Sets" IsUnderlined="true" IsReadonly="true" Value="@Item.Sets.ToString()" />
<BitTextField Label="Reps" IsUnderlined="true" IsReadonly="true" Value="@Item.Reps.ToString()" />
<BitTextField Label="Weight" IsUnderlined="true" IsReadonly="true" IconName="BitIconName.Weights" Suffix=" kg" Value="@Item.Weight.ToString()" />
<BitTextField Label="Drop set" IsUnderlined="true" IsReadonly="true" Value="@BoolText(Item.DropSet)" />
<BitTextField Label="To failure" IsUnderlined="true" IsReadonly="true" Value="@BoolText(Item.ToFailure)" />

<BitActionButton Style="margin-top: 20px;" IconName="BitIconName.Delete" OnClick="Delete">Delete</BitActionButton>

<IsDeleted Deleted="@deleted" />

@code {
    [Parameter]
    public Amrap.Core.Domain.CompletedExercise Item { get; set; }

    private bool deleted = false;

    protected override async Task OnInitializedAsync()
    {
    }

    private string BoolText(bool value) => value ? "Yes" : "No";

    public async Task Delete()
    {
        var r = await App.Current.MainPage.DisplayActionSheet(
            $"Delete {Item.ExerciseType.Name}?", "Cancel", "Delete");

        if (r == "Delete")
        {
            await Item.Delete(_databaseHandler);
            deleted = true;
        }
    }
}
