@using Amrap.Core;
@using Amrap.Core.Domain;
@using Amrap.Core.Infrastructure;
@using Bit.BlazorUI

@inject NavigationManager _navigationManager;
@inject DatabaseHandler _databaseHandler;

<style>
    .day-value {
        color: green;
        font-weight: 900;
    }

    .title-value {
        font-weight: 900;
    }
</style>

<div class="container text-center">
    <div class="row">
        <div class="col-9" style="position: center; left: 0px; padding: 6px">
            <BitTextField InputClass="day-value" IsUnderlined="true" IsReadonly="true" Value="@WorkoutPlanItem.Day.ToString()" />
        </div>
        <div class="col-3" style="position: absolute; right: 0px; padding: 6px">
            <BitActionButton IconName="BitIconName.Weights" OnClick="OnWorkoutPlanItemClick" />
        </div>
    </div>
</div>
@if (!string.IsNullOrWhiteSpace(WorkoutPlanItem.Title))
{
    <BitTextField InputClass="title-value" IsMultiline="true" IsResizable="false" IsUnderlined="true" IsReadonly="true" Value="@WorkoutPlanItem.Title" />
}
<div class="container text-center">
    <div class="row">
        <div class="col">
            <BitActionButton IconName="BitIconName.ChevronDownMed" OnClick="async () => await MoveDown()" />
        </div>
        <div class="col">
            <BitActionButton IconName="BitIconName.ChevronUpMed" OnClick="async () => await MoveUp()" />
        </div>
    </div>
</div>

@if (WorkoutPlanItem?.PlannedExercises?.Count > 1)
{
    <BitCarousel>
        <BitBasicList Items="WorkoutPlanItem.PlannedExercises" EnableVirtualization="false">
            <RowTemplate Context="item">
                <BitCarouselItem Style="height: 1200px; padding: 2px 10px; margin: 5px;">
                    <PlannedExercisePreviewComponent PlannedExercise="@item" WorkoutPlanItem="@WorkoutPlanItem" />
                </BitCarouselItem>
            </RowTemplate>
        </BitBasicList>
    </BitCarousel>
}
else if (WorkoutPlanItem?.PlannedExercises?.Count == 1)
{
    <PlannedExerciseFullComponent WorkoutPlanItem="@WorkoutPlanItem" PlannedExercise="@WorkoutPlanItem.PlannedExercises.Single()"
                                  DisplayWorkoutPlanItem="false" DisplayExerciseTypeLink="true" OnComplete="OnComplete" />
}
else
{
    <BitTextField IsUnderlined="false" HasBorder="false" IsReadonly="true" Value="no planned exercises defined" />
}
@code {
    [Parameter]
    public Amrap.Core.Domain.WorkoutPlanItem WorkoutPlanItem { get; set; }

    [Parameter]
    public EventCallback<string> OnComplete { get; set; }

    [Parameter]
    public EventCallback<WorkoutPlanItem> OnMoveDown { get; set; }

    [Parameter]
    public EventCallback<WorkoutPlanItem> OnMoveUp { get; set; }

    protected override async Task OnInitializedAsync()
    { }

    private async Task MoveDown()
    {
        await OnMoveDown.InvokeAsync(WorkoutPlanItem);
    }

    private async Task MoveUp()
    {
        await OnMoveUp.InvokeAsync(WorkoutPlanItem);
    }

    private void OnWorkoutPlanItemClick()
    {
        _navigationManager.NavigateTo(WorkoutPlanItem.Link);
    }
}
